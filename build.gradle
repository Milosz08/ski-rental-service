plugins {
  id 'java'
  id 'war'
  id 'co.uzzu.dotenv.gradle' version '2.0.0'
}

def warFileName = 'ROOT'

repositories {
  mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

dependencies {
  implementation 'org.webjars.bower:jquery:3.6.2'
  implementation 'org.webjars.npm:popper.js:1.16.1'
  implementation 'org.webjars:bootstrap:5.2.3'
  implementation 'org.webjars.npm:bootstrap-icons:1.10.2'

  implementation 'org.slf4j:slf4j-api:2.0.6'
  implementation 'org.slf4j:slf4j-simple:2.0.6'
  implementation 'com.mattbertolini:liquibase-slf4j:4.1.0'
  implementation 'org.projectlombok:lombok:1.18.24'
  implementation 'org.reflections:reflections:0.10.2'
  implementation 'at.favre.lib:bcrypt:0.9.0'
  implementation 'org.freemarker:freemarker:2.3.31'
  implementation 'org.apache.commons:commons-text:1.10.0'
  implementation 'org.modelmapper:modelmapper:3.1.1'
  implementation 'com.hierynomus:sshj:0.34.0'
  implementation 'commons-codec:commons-codec:1.15'
  implementation 'commons-validator:commons-validator:1.7'
  implementation 'com.google.code.gson:gson:2.10.1'
  implementation 'net.sf.barcode4j:barcode4j:2.1'
  implementation 'com.itextpdf:itext7-core:7.2.5'

  implementation 'mysql:mysql-connector-java:8.0.31'
  implementation 'org.hibernate:hibernate-core:6.1.6.Final'
  implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
  implementation 'org.liquibase:liquibase-core:4.18.0'
  implementation 'org.hibernate.orm:hibernate-c3p0:6.1.6.Final'

  implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
  implementation 'com.sun.mail:jakarta.mail:2.0.1'
  implementation 'com.sun.activation:jakarta.activation:2.0.1'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
  implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
  implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
  implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.0.0'
  compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

  implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

  annotationProcessor 'org.projectlombok:lombok:1.18.24'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

configurations.all {
  exclude group: 'org.eclipse.angus', module: 'angus-activation'
}

tasks.register('copyRsa', Copy) {
  from layout.projectDirectory.files(['.volumes/ssh/id_rsa', '.volumes/ssh/known_hosts.dat'])
  into layout.buildDirectory.dir("resources/main/ssh")
}

processResources {
  filesMatching('**/hibernate.cfg.xml') {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
      'db_url' : env.DB_URL.value,
      'db_user': env.DB_USERNAME.value,
      'db_pass': env.DB_PASSWORD.value,
    ]
  }
  filesMatching('**/mail.cfg.xml') {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
      'smtp_host': env.SMTP_HOST.value,
      'smtp_user': env.SMTP_USER.value,
      'smtp_pass': env.SMTP_PASS.value,
    ]
  }
  filesMatching('**/ssh.cfg.xml') {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
      'ssh_host' : env.SSH_HOST.value,
      'ssh_login': env.SSH_LOGIN.value,
    ]
  }
  dependsOn copyRsa
}

war {
  archiveFileName = "${warFileName}.war"
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  dependsOn processResources
}

build.dependsOn processResources
